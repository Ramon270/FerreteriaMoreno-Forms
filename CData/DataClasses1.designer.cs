#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PFerreteria")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblCiudade(tblCiudade instance);
    partial void UpdatetblCiudade(tblCiudade instance);
    partial void DeletetblCiudade(tblCiudade instance);
    partial void InserttblDetalle(tblDetalle instance);
    partial void UpdatetblDetalle(tblDetalle instance);
    partial void DeletetblDetalle(tblDetalle instance);
    partial void InserttblEstado(tblEstado instance);
    partial void UpdatetblEstado(tblEstado instance);
    partial void DeletetblEstado(tblEstado instance);
    partial void InserttblProveedore(tblProveedore instance);
    partial void UpdatetblProveedore(tblProveedore instance);
    partial void DeletetblProveedore(tblProveedore instance);
    partial void InserttblPosicione(tblPosicione instance);
    partial void UpdatetblPosicione(tblPosicione instance);
    partial void DeletetblPosicione(tblPosicione instance);
    partial void InserttblUsuario(tblUsuario instance);
    partial void UpdatetblUsuario(tblUsuario instance);
    partial void DeletetblUsuario(tblUsuario instance);
    partial void InserttblEmpleado(tblEmpleado instance);
    partial void UpdatetblEmpleado(tblEmpleado instance);
    partial void DeletetblEmpleado(tblEmpleado instance);
    partial void InserttblArticulo(tblArticulo instance);
    partial void UpdatetblArticulo(tblArticulo instance);
    partial void DeletetblArticulo(tblArticulo instance);
    partial void InserttblFactura(tblFactura instance);
    partial void UpdatetblFactura(tblFactura instance);
    partial void DeletetblFactura(tblFactura instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::CData.Properties.Settings.Default.PFerreteriaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblCiudade> tblCiudades
		{
			get
			{
				return this.GetTable<tblCiudade>();
			}
		}
		
		public System.Data.Linq.Table<tblDetalle> tblDetalles
		{
			get
			{
				return this.GetTable<tblDetalle>();
			}
		}
		
		public System.Data.Linq.Table<tblEstado> tblEstados
		{
			get
			{
				return this.GetTable<tblEstado>();
			}
		}
		
		public System.Data.Linq.Table<tblProveedore> tblProveedores
		{
			get
			{
				return this.GetTable<tblProveedore>();
			}
		}
		
		public System.Data.Linq.Table<tblPosicione> tblPosiciones
		{
			get
			{
				return this.GetTable<tblPosicione>();
			}
		}
		
		public System.Data.Linq.Table<tblUsuario> tblUsuarios
		{
			get
			{
				return this.GetTable<tblUsuario>();
			}
		}
		
		public System.Data.Linq.Table<tblEmpleado> tblEmpleados
		{
			get
			{
				return this.GetTable<tblEmpleado>();
			}
		}
		
		public System.Data.Linq.Table<tblArticulo> tblArticulos
		{
			get
			{
				return this.GetTable<tblArticulo>();
			}
		}
		
		public System.Data.Linq.Table<tblFactura> tblFacturas
		{
			get
			{
				return this.GetTable<tblFactura>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCiudades")]
	public partial class tblCiudade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NombreCiudad;
		
		private EntitySet<tblProveedore> _tblProveedores;
		
		private EntitySet<tblEmpleado> _tblEmpleados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreCiudadChanging(string value);
    partial void OnNombreCiudadChanged();
    #endregion
		
		public tblCiudade()
		{
			this._tblProveedores = new EntitySet<tblProveedore>(new Action<tblProveedore>(this.attach_tblProveedores), new Action<tblProveedore>(this.detach_tblProveedores));
			this._tblEmpleados = new EntitySet<tblEmpleado>(new Action<tblEmpleado>(this.attach_tblEmpleados), new Action<tblEmpleado>(this.detach_tblEmpleados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCiudad", DbType="VarChar(30)")]
		public string NombreCiudad
		{
			get
			{
				return this._NombreCiudad;
			}
			set
			{
				if ((this._NombreCiudad != value))
				{
					this.OnNombreCiudadChanging(value);
					this.SendPropertyChanging();
					this._NombreCiudad = value;
					this.SendPropertyChanged("NombreCiudad");
					this.OnNombreCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCiudade_tblProveedore", Storage="_tblProveedores", ThisKey="ID", OtherKey="IDciudad")]
		public EntitySet<tblProveedore> tblProveedores
		{
			get
			{
				return this._tblProveedores;
			}
			set
			{
				this._tblProveedores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCiudade_tblEmpleado", Storage="_tblEmpleados", ThisKey="ID", OtherKey="IDciudad")]
		public EntitySet<tblEmpleado> tblEmpleados
		{
			get
			{
				return this._tblEmpleados;
			}
			set
			{
				this._tblEmpleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProveedores(tblProveedore entity)
		{
			this.SendPropertyChanging();
			entity.tblCiudade = this;
		}
		
		private void detach_tblProveedores(tblProveedore entity)
		{
			this.SendPropertyChanging();
			entity.tblCiudade = null;
		}
		
		private void attach_tblEmpleados(tblEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.tblCiudade = this;
		}
		
		private void detach_tblEmpleados(tblEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.tblCiudade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDetalles")]
	public partial class tblDetalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDarticulo;
		
		private System.Nullable<int> _CantidadArt;
		
		private System.Nullable<decimal> _PrecioArt;
		
		private System.Nullable<int> _IDfactura;
		
		private EntityRef<tblArticulo> _tblArticulo;
		
		private EntityRef<tblFactura> _tblFactura;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDarticuloChanging(System.Nullable<int> value);
    partial void OnIDarticuloChanged();
    partial void OnCantidadArtChanging(System.Nullable<int> value);
    partial void OnCantidadArtChanged();
    partial void OnPrecioArtChanging(System.Nullable<decimal> value);
    partial void OnPrecioArtChanged();
    partial void OnIDfacturaChanging(System.Nullable<int> value);
    partial void OnIDfacturaChanged();
    #endregion
		
		public tblDetalle()
		{
			this._tblArticulo = default(EntityRef<tblArticulo>);
			this._tblFactura = default(EntityRef<tblFactura>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDarticulo", DbType="Int")]
		public System.Nullable<int> IDarticulo
		{
			get
			{
				return this._IDarticulo;
			}
			set
			{
				if ((this._IDarticulo != value))
				{
					if (this._tblArticulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDarticuloChanging(value);
					this.SendPropertyChanging();
					this._IDarticulo = value;
					this.SendPropertyChanged("IDarticulo");
					this.OnIDarticuloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CantidadArt", DbType="Int")]
		public System.Nullable<int> CantidadArt
		{
			get
			{
				return this._CantidadArt;
			}
			set
			{
				if ((this._CantidadArt != value))
				{
					this.OnCantidadArtChanging(value);
					this.SendPropertyChanging();
					this._CantidadArt = value;
					this.SendPropertyChanged("CantidadArt");
					this.OnCantidadArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioArt", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PrecioArt
		{
			get
			{
				return this._PrecioArt;
			}
			set
			{
				if ((this._PrecioArt != value))
				{
					this.OnPrecioArtChanging(value);
					this.SendPropertyChanging();
					this._PrecioArt = value;
					this.SendPropertyChanged("PrecioArt");
					this.OnPrecioArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDfactura", DbType="Int")]
		public System.Nullable<int> IDfactura
		{
			get
			{
				return this._IDfactura;
			}
			set
			{
				if ((this._IDfactura != value))
				{
					if (this._tblFactura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDfacturaChanging(value);
					this.SendPropertyChanging();
					this._IDfactura = value;
					this.SendPropertyChanged("IDfactura");
					this.OnIDfacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblArticulo_tblDetalle", Storage="_tblArticulo", ThisKey="IDarticulo", OtherKey="ID", IsForeignKey=true)]
		public tblArticulo tblArticulo
		{
			get
			{
				return this._tblArticulo.Entity;
			}
			set
			{
				tblArticulo previousValue = this._tblArticulo.Entity;
				if (((previousValue != value) 
							|| (this._tblArticulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblArticulo.Entity = null;
						previousValue.tblDetalles.Remove(this);
					}
					this._tblArticulo.Entity = value;
					if ((value != null))
					{
						value.tblDetalles.Add(this);
						this._IDarticulo = value.ID;
					}
					else
					{
						this._IDarticulo = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblArticulo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblFactura_tblDetalle", Storage="_tblFactura", ThisKey="IDfactura", OtherKey="ID", IsForeignKey=true)]
		public tblFactura tblFactura
		{
			get
			{
				return this._tblFactura.Entity;
			}
			set
			{
				tblFactura previousValue = this._tblFactura.Entity;
				if (((previousValue != value) 
							|| (this._tblFactura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblFactura.Entity = null;
						previousValue.tblDetalles.Remove(this);
					}
					this._tblFactura.Entity = value;
					if ((value != null))
					{
						value.tblDetalles.Add(this);
						this._IDfactura = value.ID;
					}
					else
					{
						this._IDfactura = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblFactura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEstados")]
	public partial class tblEstado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NombreEstado;
		
		private EntitySet<tblProveedore> _tblProveedores;
		
		private EntitySet<tblUsuario> _tblUsuarios;
		
		private EntitySet<tblEmpleado> _tblEmpleados;
		
		private EntitySet<tblArticulo> _tblArticulos;
		
		private EntitySet<tblFactura> _tblFacturas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreEstadoChanging(string value);
    partial void OnNombreEstadoChanged();
    #endregion
		
		public tblEstado()
		{
			this._tblProveedores = new EntitySet<tblProveedore>(new Action<tblProveedore>(this.attach_tblProveedores), new Action<tblProveedore>(this.detach_tblProveedores));
			this._tblUsuarios = new EntitySet<tblUsuario>(new Action<tblUsuario>(this.attach_tblUsuarios), new Action<tblUsuario>(this.detach_tblUsuarios));
			this._tblEmpleados = new EntitySet<tblEmpleado>(new Action<tblEmpleado>(this.attach_tblEmpleados), new Action<tblEmpleado>(this.detach_tblEmpleados));
			this._tblArticulos = new EntitySet<tblArticulo>(new Action<tblArticulo>(this.attach_tblArticulos), new Action<tblArticulo>(this.detach_tblArticulos));
			this._tblFacturas = new EntitySet<tblFactura>(new Action<tblFactura>(this.attach_tblFacturas), new Action<tblFactura>(this.detach_tblFacturas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreEstado", DbType="VarChar(20)")]
		public string NombreEstado
		{
			get
			{
				return this._NombreEstado;
			}
			set
			{
				if ((this._NombreEstado != value))
				{
					this.OnNombreEstadoChanging(value);
					this.SendPropertyChanging();
					this._NombreEstado = value;
					this.SendPropertyChanged("NombreEstado");
					this.OnNombreEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblProveedore", Storage="_tblProveedores", ThisKey="ID", OtherKey="IDestado")]
		public EntitySet<tblProveedore> tblProveedores
		{
			get
			{
				return this._tblProveedores;
			}
			set
			{
				this._tblProveedores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblUsuario", Storage="_tblUsuarios", ThisKey="ID", OtherKey="IDestado")]
		public EntitySet<tblUsuario> tblUsuarios
		{
			get
			{
				return this._tblUsuarios;
			}
			set
			{
				this._tblUsuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblEmpleado", Storage="_tblEmpleados", ThisKey="ID", OtherKey="IDestado")]
		public EntitySet<tblEmpleado> tblEmpleados
		{
			get
			{
				return this._tblEmpleados;
			}
			set
			{
				this._tblEmpleados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblArticulo", Storage="_tblArticulos", ThisKey="ID", OtherKey="IDestado")]
		public EntitySet<tblArticulo> tblArticulos
		{
			get
			{
				return this._tblArticulos;
			}
			set
			{
				this._tblArticulos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblFactura", Storage="_tblFacturas", ThisKey="ID", OtherKey="IDestado")]
		public EntitySet<tblFactura> tblFacturas
		{
			get
			{
				return this._tblFacturas;
			}
			set
			{
				this._tblFacturas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProveedores(tblProveedore entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = this;
		}
		
		private void detach_tblProveedores(tblProveedore entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = null;
		}
		
		private void attach_tblUsuarios(tblUsuario entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = this;
		}
		
		private void detach_tblUsuarios(tblUsuario entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = null;
		}
		
		private void attach_tblEmpleados(tblEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = this;
		}
		
		private void detach_tblEmpleados(tblEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = null;
		}
		
		private void attach_tblArticulos(tblArticulo entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = this;
		}
		
		private void detach_tblArticulos(tblArticulo entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = null;
		}
		
		private void attach_tblFacturas(tblFactura entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = this;
		}
		
		private void detach_tblFacturas(tblFactura entity)
		{
			this.SendPropertyChanging();
			entity.tblEstado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProveedores")]
	public partial class tblProveedore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Codigo;
		
		private string _NombreProveedor;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private System.Nullable<int> _IDciudad;
		
		private System.Nullable<int> _IDestado;
		
		private EntitySet<tblArticulo> _tblArticulos;
		
		private EntityRef<tblCiudade> _tblCiudade;
		
		private EntityRef<tblEstado> _tblEstado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnNombreProveedorChanging(string value);
    partial void OnNombreProveedorChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnIDciudadChanging(System.Nullable<int> value);
    partial void OnIDciudadChanged();
    partial void OnIDestadoChanging(System.Nullable<int> value);
    partial void OnIDestadoChanged();
    #endregion
		
		public tblProveedore()
		{
			this._tblArticulos = new EntitySet<tblArticulo>(new Action<tblArticulo>(this.attach_tblArticulos), new Action<tblArticulo>(this.detach_tblArticulos));
			this._tblCiudade = default(EntityRef<tblCiudade>);
			this._tblEstado = default(EntityRef<tblEstado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(10)")]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreProveedor", DbType="VarChar(30)")]
		public string NombreProveedor
		{
			get
			{
				return this._NombreProveedor;
			}
			set
			{
				if ((this._NombreProveedor != value))
				{
					this.OnNombreProveedorChanging(value);
					this.SendPropertyChanging();
					this._NombreProveedor = value;
					this.SendPropertyChanged("NombreProveedor");
					this.OnNombreProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(10)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDciudad", DbType="Int")]
		public System.Nullable<int> IDciudad
		{
			get
			{
				return this._IDciudad;
			}
			set
			{
				if ((this._IDciudad != value))
				{
					if (this._tblCiudade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDciudadChanging(value);
					this.SendPropertyChanging();
					this._IDciudad = value;
					this.SendPropertyChanged("IDciudad");
					this.OnIDciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDestado", DbType="Int")]
		public System.Nullable<int> IDestado
		{
			get
			{
				return this._IDestado;
			}
			set
			{
				if ((this._IDestado != value))
				{
					if (this._tblEstado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDestadoChanging(value);
					this.SendPropertyChanging();
					this._IDestado = value;
					this.SendPropertyChanged("IDestado");
					this.OnIDestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProveedore_tblArticulo", Storage="_tblArticulos", ThisKey="ID", OtherKey="IDproveedor")]
		public EntitySet<tblArticulo> tblArticulos
		{
			get
			{
				return this._tblArticulos;
			}
			set
			{
				this._tblArticulos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCiudade_tblProveedore", Storage="_tblCiudade", ThisKey="IDciudad", OtherKey="ID", IsForeignKey=true)]
		public tblCiudade tblCiudade
		{
			get
			{
				return this._tblCiudade.Entity;
			}
			set
			{
				tblCiudade previousValue = this._tblCiudade.Entity;
				if (((previousValue != value) 
							|| (this._tblCiudade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCiudade.Entity = null;
						previousValue.tblProveedores.Remove(this);
					}
					this._tblCiudade.Entity = value;
					if ((value != null))
					{
						value.tblProveedores.Add(this);
						this._IDciudad = value.ID;
					}
					else
					{
						this._IDciudad = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCiudade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblProveedore", Storage="_tblEstado", ThisKey="IDestado", OtherKey="ID", IsForeignKey=true)]
		public tblEstado tblEstado
		{
			get
			{
				return this._tblEstado.Entity;
			}
			set
			{
				tblEstado previousValue = this._tblEstado.Entity;
				if (((previousValue != value) 
							|| (this._tblEstado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEstado.Entity = null;
						previousValue.tblProveedores.Remove(this);
					}
					this._tblEstado.Entity = value;
					if ((value != null))
					{
						value.tblProveedores.Add(this);
						this._IDestado = value.ID;
					}
					else
					{
						this._IDestado = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEstado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblArticulos(tblArticulo entity)
		{
			this.SendPropertyChanging();
			entity.tblProveedore = this;
		}
		
		private void detach_tblArticulos(tblArticulo entity)
		{
			this.SendPropertyChanging();
			entity.tblProveedore = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPosiciones")]
	public partial class tblPosicione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NombrePosicion;
		
		private EntitySet<tblEmpleado> _tblEmpleados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombrePosicionChanging(string value);
    partial void OnNombrePosicionChanged();
    #endregion
		
		public tblPosicione()
		{
			this._tblEmpleados = new EntitySet<tblEmpleado>(new Action<tblEmpleado>(this.attach_tblEmpleados), new Action<tblEmpleado>(this.detach_tblEmpleados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombrePosicion", DbType="VarChar(20)")]
		public string NombrePosicion
		{
			get
			{
				return this._NombrePosicion;
			}
			set
			{
				if ((this._NombrePosicion != value))
				{
					this.OnNombrePosicionChanging(value);
					this.SendPropertyChanging();
					this._NombrePosicion = value;
					this.SendPropertyChanged("NombrePosicion");
					this.OnNombrePosicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPosicione_tblEmpleado", Storage="_tblEmpleados", ThisKey="ID", OtherKey="IDposicion")]
		public EntitySet<tblEmpleado> tblEmpleados
		{
			get
			{
				return this._tblEmpleados;
			}
			set
			{
				this._tblEmpleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEmpleados(tblEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.tblPosicione = this;
		}
		
		private void detach_tblEmpleados(tblEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.tblPosicione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsuarios")]
	public partial class tblUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Contrasena;
		
		private System.Nullable<int> _IDempleado;
		
		private System.Nullable<int> _IDestado;
		
		private EntityRef<tblEstado> _tblEstado;
		
		private EntityRef<tblEmpleado> _tblEmpleado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnContrasenaChanging(string value);
    partial void OnContrasenaChanged();
    partial void OnIDempleadoChanging(System.Nullable<int> value);
    partial void OnIDempleadoChanged();
    partial void OnIDestadoChanging(System.Nullable<int> value);
    partial void OnIDestadoChanged();
    #endregion
		
		public tblUsuario()
		{
			this._tblEstado = default(EntityRef<tblEstado>);
			this._tblEmpleado = default(EntityRef<tblEmpleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasena", DbType="VarChar(20)")]
		public string Contrasena
		{
			get
			{
				return this._Contrasena;
			}
			set
			{
				if ((this._Contrasena != value))
				{
					this.OnContrasenaChanging(value);
					this.SendPropertyChanging();
					this._Contrasena = value;
					this.SendPropertyChanged("Contrasena");
					this.OnContrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDempleado", DbType="Int")]
		public System.Nullable<int> IDempleado
		{
			get
			{
				return this._IDempleado;
			}
			set
			{
				if ((this._IDempleado != value))
				{
					if (this._tblEmpleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDempleadoChanging(value);
					this.SendPropertyChanging();
					this._IDempleado = value;
					this.SendPropertyChanged("IDempleado");
					this.OnIDempleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDestado", DbType="Int")]
		public System.Nullable<int> IDestado
		{
			get
			{
				return this._IDestado;
			}
			set
			{
				if ((this._IDestado != value))
				{
					if (this._tblEstado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDestadoChanging(value);
					this.SendPropertyChanging();
					this._IDestado = value;
					this.SendPropertyChanged("IDestado");
					this.OnIDestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblUsuario", Storage="_tblEstado", ThisKey="IDestado", OtherKey="ID", IsForeignKey=true)]
		public tblEstado tblEstado
		{
			get
			{
				return this._tblEstado.Entity;
			}
			set
			{
				tblEstado previousValue = this._tblEstado.Entity;
				if (((previousValue != value) 
							|| (this._tblEstado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEstado.Entity = null;
						previousValue.tblUsuarios.Remove(this);
					}
					this._tblEstado.Entity = value;
					if ((value != null))
					{
						value.tblUsuarios.Add(this);
						this._IDestado = value.ID;
					}
					else
					{
						this._IDestado = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEstado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmpleado_tblUsuario", Storage="_tblEmpleado", ThisKey="IDempleado", OtherKey="ID", IsForeignKey=true)]
		public tblEmpleado tblEmpleado
		{
			get
			{
				return this._tblEmpleado.Entity;
			}
			set
			{
				tblEmpleado previousValue = this._tblEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._tblEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEmpleado.Entity = null;
						previousValue.tblUsuarios.Remove(this);
					}
					this._tblEmpleado.Entity = value;
					if ((value != null))
					{
						value.tblUsuarios.Add(this);
						this._IDempleado = value.ID;
					}
					else
					{
						this._IDempleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEmpleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmpleados")]
	public partial class tblEmpleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Codigo;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Cedula;
		
		private string _Direccion;
		
		private System.Nullable<char> _Sexo;
		
		private System.Nullable<System.DateTime> _FechaNacimiento;
		
		private System.Nullable<System.DateTime> _FechaRegistro;
		
		private System.Nullable<int> _IDciudad;
		
		private System.Nullable<int> _IDestado;
		
		private System.Nullable<int> _IDposicion;
		
		private string _Telefono;
		
		private EntitySet<tblUsuario> _tblUsuarios;
		
		private EntityRef<tblCiudade> _tblCiudade;
		
		private EntityRef<tblEstado> _tblEstado;
		
		private EntityRef<tblPosicione> _tblPosicione;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnSexoChanging(System.Nullable<char> value);
    partial void OnSexoChanged();
    partial void OnFechaNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaNacimientoChanged();
    partial void OnFechaRegistroChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaRegistroChanged();
    partial void OnIDciudadChanging(System.Nullable<int> value);
    partial void OnIDciudadChanged();
    partial void OnIDestadoChanging(System.Nullable<int> value);
    partial void OnIDestadoChanged();
    partial void OnIDposicionChanging(System.Nullable<int> value);
    partial void OnIDposicionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public tblEmpleado()
		{
			this._tblUsuarios = new EntitySet<tblUsuario>(new Action<tblUsuario>(this.attach_tblUsuarios), new Action<tblUsuario>(this.detach_tblUsuarios));
			this._tblCiudade = default(EntityRef<tblCiudade>);
			this._tblEstado = default(EntityRef<tblEstado>);
			this._tblPosicione = default(EntityRef<tblPosicione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(10)")]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(20)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(30)")]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(11)")]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(30)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Char(1)")]
		public System.Nullable<char> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaRegistro", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaRegistro
		{
			get
			{
				return this._FechaRegistro;
			}
			set
			{
				if ((this._FechaRegistro != value))
				{
					this.OnFechaRegistroChanging(value);
					this.SendPropertyChanging();
					this._FechaRegistro = value;
					this.SendPropertyChanged("FechaRegistro");
					this.OnFechaRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDciudad", DbType="Int")]
		public System.Nullable<int> IDciudad
		{
			get
			{
				return this._IDciudad;
			}
			set
			{
				if ((this._IDciudad != value))
				{
					if (this._tblCiudade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDciudadChanging(value);
					this.SendPropertyChanging();
					this._IDciudad = value;
					this.SendPropertyChanged("IDciudad");
					this.OnIDciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDestado", DbType="Int")]
		public System.Nullable<int> IDestado
		{
			get
			{
				return this._IDestado;
			}
			set
			{
				if ((this._IDestado != value))
				{
					if (this._tblEstado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDestadoChanging(value);
					this.SendPropertyChanging();
					this._IDestado = value;
					this.SendPropertyChanged("IDestado");
					this.OnIDestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDposicion", DbType="Int")]
		public System.Nullable<int> IDposicion
		{
			get
			{
				return this._IDposicion;
			}
			set
			{
				if ((this._IDposicion != value))
				{
					if (this._tblPosicione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDposicionChanging(value);
					this.SendPropertyChanging();
					this._IDposicion = value;
					this.SendPropertyChanged("IDposicion");
					this.OnIDposicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(10)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmpleado_tblUsuario", Storage="_tblUsuarios", ThisKey="ID", OtherKey="IDempleado")]
		public EntitySet<tblUsuario> tblUsuarios
		{
			get
			{
				return this._tblUsuarios;
			}
			set
			{
				this._tblUsuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCiudade_tblEmpleado", Storage="_tblCiudade", ThisKey="IDciudad", OtherKey="ID", IsForeignKey=true)]
		public tblCiudade tblCiudade
		{
			get
			{
				return this._tblCiudade.Entity;
			}
			set
			{
				tblCiudade previousValue = this._tblCiudade.Entity;
				if (((previousValue != value) 
							|| (this._tblCiudade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCiudade.Entity = null;
						previousValue.tblEmpleados.Remove(this);
					}
					this._tblCiudade.Entity = value;
					if ((value != null))
					{
						value.tblEmpleados.Add(this);
						this._IDciudad = value.ID;
					}
					else
					{
						this._IDciudad = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCiudade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblEmpleado", Storage="_tblEstado", ThisKey="IDestado", OtherKey="ID", IsForeignKey=true)]
		public tblEstado tblEstado
		{
			get
			{
				return this._tblEstado.Entity;
			}
			set
			{
				tblEstado previousValue = this._tblEstado.Entity;
				if (((previousValue != value) 
							|| (this._tblEstado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEstado.Entity = null;
						previousValue.tblEmpleados.Remove(this);
					}
					this._tblEstado.Entity = value;
					if ((value != null))
					{
						value.tblEmpleados.Add(this);
						this._IDestado = value.ID;
					}
					else
					{
						this._IDestado = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEstado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPosicione_tblEmpleado", Storage="_tblPosicione", ThisKey="IDposicion", OtherKey="ID", IsForeignKey=true)]
		public tblPosicione tblPosicione
		{
			get
			{
				return this._tblPosicione.Entity;
			}
			set
			{
				tblPosicione previousValue = this._tblPosicione.Entity;
				if (((previousValue != value) 
							|| (this._tblPosicione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPosicione.Entity = null;
						previousValue.tblEmpleados.Remove(this);
					}
					this._tblPosicione.Entity = value;
					if ((value != null))
					{
						value.tblEmpleados.Add(this);
						this._IDposicion = value.ID;
					}
					else
					{
						this._IDposicion = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblPosicione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsuarios(tblUsuario entity)
		{
			this.SendPropertyChanging();
			entity.tblEmpleado = this;
		}
		
		private void detach_tblUsuarios(tblUsuario entity)
		{
			this.SendPropertyChanging();
			entity.tblEmpleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblArticulos")]
	public partial class tblArticulo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Codigo;
		
		private string _NombreArticulo;
		
		private string _Descripcion;
		
		private System.Nullable<decimal> _Precio;
		
		private System.Nullable<int> _Cantidad;
		
		private System.Nullable<int> _IDproveedor;
		
		private System.Nullable<int> _IDestado;
		
		private EntitySet<tblDetalle> _tblDetalles;
		
		private EntityRef<tblEstado> _tblEstado;
		
		private EntityRef<tblProveedore> _tblProveedore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnNombreArticuloChanging(string value);
    partial void OnNombreArticuloChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioChanging(System.Nullable<decimal> value);
    partial void OnPrecioChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    partial void OnIDproveedorChanging(System.Nullable<int> value);
    partial void OnIDproveedorChanged();
    partial void OnIDestadoChanging(System.Nullable<int> value);
    partial void OnIDestadoChanged();
    #endregion
		
		public tblArticulo()
		{
			this._tblDetalles = new EntitySet<tblDetalle>(new Action<tblDetalle>(this.attach_tblDetalles), new Action<tblDetalle>(this.detach_tblDetalles));
			this._tblEstado = default(EntityRef<tblEstado>);
			this._tblProveedore = default(EntityRef<tblProveedore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(10)")]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreArticulo", DbType="VarChar(30)")]
		public string NombreArticulo
		{
			get
			{
				return this._NombreArticulo;
			}
			set
			{
				if ((this._NombreArticulo != value))
				{
					this.OnNombreArticuloChanging(value);
					this.SendPropertyChanging();
					this._NombreArticulo = value;
					this.SendPropertyChanged("NombreArticulo");
					this.OnNombreArticuloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(50)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDproveedor", DbType="Int")]
		public System.Nullable<int> IDproveedor
		{
			get
			{
				return this._IDproveedor;
			}
			set
			{
				if ((this._IDproveedor != value))
				{
					if (this._tblProveedore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDproveedorChanging(value);
					this.SendPropertyChanging();
					this._IDproveedor = value;
					this.SendPropertyChanged("IDproveedor");
					this.OnIDproveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDestado", DbType="Int")]
		public System.Nullable<int> IDestado
		{
			get
			{
				return this._IDestado;
			}
			set
			{
				if ((this._IDestado != value))
				{
					if (this._tblEstado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDestadoChanging(value);
					this.SendPropertyChanging();
					this._IDestado = value;
					this.SendPropertyChanged("IDestado");
					this.OnIDestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblArticulo_tblDetalle", Storage="_tblDetalles", ThisKey="ID", OtherKey="IDarticulo")]
		public EntitySet<tblDetalle> tblDetalles
		{
			get
			{
				return this._tblDetalles;
			}
			set
			{
				this._tblDetalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblArticulo", Storage="_tblEstado", ThisKey="IDestado", OtherKey="ID", IsForeignKey=true)]
		public tblEstado tblEstado
		{
			get
			{
				return this._tblEstado.Entity;
			}
			set
			{
				tblEstado previousValue = this._tblEstado.Entity;
				if (((previousValue != value) 
							|| (this._tblEstado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEstado.Entity = null;
						previousValue.tblArticulos.Remove(this);
					}
					this._tblEstado.Entity = value;
					if ((value != null))
					{
						value.tblArticulos.Add(this);
						this._IDestado = value.ID;
					}
					else
					{
						this._IDestado = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEstado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProveedore_tblArticulo", Storage="_tblProveedore", ThisKey="IDproveedor", OtherKey="ID", IsForeignKey=true)]
		public tblProveedore tblProveedore
		{
			get
			{
				return this._tblProveedore.Entity;
			}
			set
			{
				tblProveedore previousValue = this._tblProveedore.Entity;
				if (((previousValue != value) 
							|| (this._tblProveedore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProveedore.Entity = null;
						previousValue.tblArticulos.Remove(this);
					}
					this._tblProveedore.Entity = value;
					if ((value != null))
					{
						value.tblArticulos.Add(this);
						this._IDproveedor = value.ID;
					}
					else
					{
						this._IDproveedor = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblProveedore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblDetalles(tblDetalle entity)
		{
			this.SendPropertyChanging();
			entity.tblArticulo = this;
		}
		
		private void detach_tblDetalles(tblDetalle entity)
		{
			this.SendPropertyChanging();
			entity.tblArticulo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFacturas")]
	public partial class tblFactura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _NombreFacturado;
		
		private System.Nullable<int> _IDestado;
		
		private string _Codigo;
		
		private EntitySet<tblDetalle> _tblDetalles;
		
		private EntityRef<tblEstado> _tblEstado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnNombreFacturadoChanging(string value);
    partial void OnNombreFacturadoChanged();
    partial void OnIDestadoChanging(System.Nullable<int> value);
    partial void OnIDestadoChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    #endregion
		
		public tblFactura()
		{
			this._tblDetalles = new EntitySet<tblDetalle>(new Action<tblDetalle>(this.attach_tblDetalles), new Action<tblDetalle>(this.detach_tblDetalles));
			this._tblEstado = default(EntityRef<tblEstado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreFacturado", DbType="VarChar(30)")]
		public string NombreFacturado
		{
			get
			{
				return this._NombreFacturado;
			}
			set
			{
				if ((this._NombreFacturado != value))
				{
					this.OnNombreFacturadoChanging(value);
					this.SendPropertyChanging();
					this._NombreFacturado = value;
					this.SendPropertyChanged("NombreFacturado");
					this.OnNombreFacturadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDestado", DbType="Int")]
		public System.Nullable<int> IDestado
		{
			get
			{
				return this._IDestado;
			}
			set
			{
				if ((this._IDestado != value))
				{
					if (this._tblEstado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDestadoChanging(value);
					this.SendPropertyChanging();
					this._IDestado = value;
					this.SendPropertyChanged("IDestado");
					this.OnIDestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(8)")]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblFactura_tblDetalle", Storage="_tblDetalles", ThisKey="ID", OtherKey="IDfactura")]
		public EntitySet<tblDetalle> tblDetalles
		{
			get
			{
				return this._tblDetalles;
			}
			set
			{
				this._tblDetalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEstado_tblFactura", Storage="_tblEstado", ThisKey="IDestado", OtherKey="ID", IsForeignKey=true)]
		public tblEstado tblEstado
		{
			get
			{
				return this._tblEstado.Entity;
			}
			set
			{
				tblEstado previousValue = this._tblEstado.Entity;
				if (((previousValue != value) 
							|| (this._tblEstado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEstado.Entity = null;
						previousValue.tblFacturas.Remove(this);
					}
					this._tblEstado.Entity = value;
					if ((value != null))
					{
						value.tblFacturas.Add(this);
						this._IDestado = value.ID;
					}
					else
					{
						this._IDestado = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblEstado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblDetalles(tblDetalle entity)
		{
			this.SendPropertyChanging();
			entity.tblFactura = this;
		}
		
		private void detach_tblDetalles(tblDetalle entity)
		{
			this.SendPropertyChanging();
			entity.tblFactura = null;
		}
	}
}
#pragma warning restore 1591
